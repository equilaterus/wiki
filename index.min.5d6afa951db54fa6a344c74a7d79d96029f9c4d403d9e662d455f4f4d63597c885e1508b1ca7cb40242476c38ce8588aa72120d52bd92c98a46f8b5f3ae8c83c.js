var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(e){const s=suggestions.classList.contains("d-none");if(s)return;const t=[...suggestions.querySelectorAll("a")];if(t.length===0)return;const n=t.indexOf(document.activeElement);if(e.key==="ArrowUp"){e.preventDefault();const s=n>0?n-1:0;t[s].focus()}else if(e.key==="ArrowDown"){e.preventDefault();const s=n+1<t.length?n+1:n;t[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/wiki/docs/start/",title:"Start",description:"Equilaterus WIKI starts here",content:""}),e.add({id:1,href:"/wiki/docs/unreal/ue-linux/",title:"UE Linux",description:"Unreal Development on Linux",content:` Official binaries: Download page Recommended IDE: Rider Linux. Recommended Git App: Github Desktop for Linux. PlasticSCM: Linux packages Complete UE-Linux Guide #See our article on The Science of Code: a compact but comprehensive guide that includes instructions to install, execute and troubleshoot UE 5 for Linux.
`}),e.add({id:2,href:"/wiki/docs/programming/",title:"Programming",description:"Programming",content:""}),e.add({id:3,href:"/wiki/docs/programming/dotnet-core/",title:".Net Core",description:"Quick-starts and guidelines for .Net Core development.",content:`Sample Projects #.NET 8.0 gamestoolkit.api
Clean Architecture / Dapper / EFCore / CQRS / AutoMapper / Swagger / Functional testing / Unit testing / CI.
.NET Core 2.2 AspCore.SampleAPI
Clean Architecture / Domain / Behaviors / Queries / AutoMapper / Swagger / Functional testing / CI.
Quick guides/samples #💡 Hotspots and cheatsheets for your common use cases. Web API Example #Build web APIs with .NET 8.0 Tutorial - Controllers .NET 8.0 Tutorial: Minimal API .NET 8.0 Action return types .NET 8.0 [Route(\u0026quot;api/[controller]\u0026quot;)] [ApiController] public class UsersController : ControllerBase { protected readonly IUsersRepository _repository; public UsersController(IUsersRepository repository) { _repository = repository; } [HttpGet] [ProducesResponseType(200)] public async Task\u0026lt;ActionResult\u0026lt;IEnumerable\u0026lt;User\u0026gt;\u0026gt;\u0026gt; GetAllAsync() { return await _repository.GetAll(); } [HttpGet(\u0026quot;{username}\u0026quot;)] [ProducesResponseType(200)] [ProducesResponseType(404)] public async Task\u0026lt;ActionResult\u0026lt;User\u0026gt;\u0026gt; GetByIdAsync(string username) { var existingUser = await _repository.GetByUsername(username); if (existingUser == null) { return NotFound(); } return existingUser; } [HttpPost] [ProducesResponseType(201)] [ProducesResponseType(400)] public async Task\u0026lt;ActionResult\u0026lt;User\u0026gt;\u0026gt; CreateUserAsync(User user) { await _repository.AddUser(user); return CreatedAtAction(nameof(GetById), new { username = user.Username }, user); } [HttpPut(\u0026quot;{username}\u0026quot;)] [ProducesResponseType(204)] [ProducesResponseType(404)] public async Task\u0026lt;IActionResult\u0026gt; UpdateUserAsync(string username, User user) { var existingUser = await _repository.GetByUsername(username); if (existingUser == null) { return NotFound(); } existingUser.Nickname = user.Nickname; existingUser.Email = user.Email; await _repository.Update(existingUser); return NoContent(); } [HttpDelete(\u0026quot;{username}\u0026quot;)] [ProducesResponseType(204)] [ProducesResponseType(404)] public async Task\u0026lt;IActionResult\u0026gt; DeleteUserAsync(string username) { var existingUser = await _repository.GetByUsername(username); if (existingUser == null) { return NotFound(); } await _repository.Delete(existingUser); return NoContent(); } } Global error handling #For .NET 8:
Add these lines to your Program.cs:
... builder.Services.AddExceptionHandler\u0026lt;GlobalExceptionHandler\u0026gt;(); builder.Services.AddProblemDetails(); ... app.UseExceptionHandler(); Create a ViewModel:
public class ErrorResponseViewModel { public string Message { get; set; } public int StatusCode { get; set; } } Add and customize the global exception handler:
public class GlobalExceptionHandler : IExceptionHandler { private readonly ILogger _logger; public GlobalExceptionHandler(ILogger\u0026lt;GlobalExceptionHandler\u0026gt; logger) { _logger = logger; } public async ValueTask\u0026lt;bool\u0026gt; TryHandleAsync( HttpContext httpContext, Exception exception, CancellationToken cancellationToken) { _logger.LogError(\$\u0026quot;Exception [{ exception.Message }]. Inner exception [{ exception.InnerException?.Message}]. Stack trace: [{ exception.StackTrace }]\u0026quot;); var errorResponse = new ErrorResponseViewModel(); switch (exception) { case BadHttpRequestException: errorResponse.StatusCode = (int)HttpStatusCode.BadRequest; errorResponse.Message = exception.GetType().Name; break; default: errorResponse.StatusCode = (int)HttpStatusCode.InternalServerError; errorResponse.Message = \u0026quot;Internal Server Error\u0026quot;; break; } httpContext.Response.StatusCode = errorResponse.StatusCode; await httpContext .Response .WriteAsJsonAsync(errorResponse, cancellationToken); // You may return false and set another ExceptionHandler to handle specific exceptions return true; } } More info:
Global error handling .NET 8 Global error handling tutorial Official guide EF Core Hotspots #Startup.cs -\u0026gt; Configure Services
services.AddDbContext\u0026lt;MYContext\u0026gt;( options =\u0026gt; options.UseSqlServer(Configuration.GetConnectionString(\u0026quot;DefaultConnection\u0026quot;), serverOptions =\u0026gt; serverOptions.MigrationsAssembly(\u0026quot;ASSEMBLYNAME\u0026quot;))); appsettings.json
{ \u0026quot;ConnectionStrings\u0026quot;: { \u0026quot;DefaultConnection\u0026quot;: \u0026quot;Server=(localdb)\\\\mssqllocaldb;Database=DBNAME;Trusted_Connection=True;MultipleActiveResultSets=true\u0026quot; }, ... } DbContext:
public class MYContext : DbContext { public MYContext() { } public MYContext(DbContextOptions\u0026lt;MYContext\u0026gt; options) : base(options) { } public DbSet\u0026lt;...\u0026gt; .... } Testing InMemoryDatabase provider:
new DbContextOptionsBuilder\u0026lt;MYContext\u0026gt;() .UseInMemoryDatabase(databaseName: NAME) .Options AutoMapper DI #AutoMapper Extensions for Microsoft DI.
// Add this line to your startup.cs services.AddAutoMapper(AppDomain.CurrentDomain.GetAssemblies()); // Or this one... services.AddAutoMapper(typeof(Program)) Mediatr #Install:
dotnet add package MediatR Injection:
services.AddMediatR(cfg =\u0026gt; { cfg.RegisterServicesFromAssembly(typeof(Program).Assembly); }); Request / Response (single handler):
// Request with return public class Command : IRequest\u0026lt;string\u0026gt; // IRequest\u0026lt;ReturnType\u0026gt; { // Add command params here } // Response (note generic params) public class CommandHandler : IRequestHandler\u0026lt;Command, string\u0026gt; // IRequestHandler\u0026lt;Request, ReturnType\u0026gt; { public async Task\u0026lt;string\u0026gt; Handle(Command request, CancellationToken cancellationToken) { // You may need to read your command params // ... // ... return Task.FromResult(\u0026quot;Result\u0026quot;); } } // Send message from any other place var command = new Command(); var response = await mediator.Send(Command); If you do not require a response:
public class OneWay : IRequest { } public class OneWayHandler : IRequestHandler\u0026lt;OneWay\u0026gt; { public async Task Handle(OneWay request, CancellationToken cancellationToken) { // Do work // ... return Task.CompletedTask; } } Notifications (multiple handlers):
public class MyEvent : INotification { } public class MyEventStore : INotificationHandler\u0026lt;MyEvent\u0026gt; { public async Task Handle(MyEvent notification, CancellationToken cancellationToken) { // Save in your DB // ... return Task.CompletedTask; } } public class MyEventNotify : INotificationHandler\u0026lt;MyEvent\u0026gt; { public async Task Handle(MyEvent notification, CancellationToken cancellationToken) { // Do work // ... return Task.CompletedTask; } } More info:
Wiki Official repo Docker development (with Visual Studio) #Install Docker Desktop and configure it for Linux Containers.
Run these commands (you may need to enable CPU virtualization on your BIOS):
dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart # If update fails, try to install: wsl.exe --install wsl.exe --update wsl --set-default-version 2 Restart. Accept SSL certificates and Re-restart your machine.
You\u0026rsquo;re ready to go!
Problems? Check this guide Performance #A kind of - Practical intro to Async APIs
Async discussions: Sync vs Async Async and IIS My take on Async - experiment Use DbContextPooling to improve the performance: .Net Core 2.1
Vortex #Write elegant and testeable solutions on C# using a Monadic Framework. ASP Core joins the functional side!
Vortex Repository Sample Apps Official website `}),e.add({id:4,href:"/wiki/docs/programming/git/",title:"Git",description:"Quick-starts and guidelines for .Net Core developemnt.",content:` We always recommend to use a GUI tool on top of your git repo. Check GitHub Desktop for Linux or Windows/Mac.
Git submodules #If you need to share internal code and/or include other libraries (like ImGUI for C/C++) you may consider using Git Submodules.
git submodule add {REPO_URL} {TARGET_FOLDER} # Example git submodule add https://github.com/ocornut/imgui libs/imgui/ Important:
We recommend to use GitHub Desktop and add the submodule itself (after cloning the project) as a repo with an alias (in GitHub Desktop).
For the submodule we recommend using a branching strategy to easily go back and forth between versions. For example: you can create a branch for each stable version and have branches.
Git LFS #To enable Git LFS on your project, first check your repository provider availability and costs. After that follow these steps:
Install:
git lfs install Create a file on your repo root folder named .gitattributes and customize its contents using this sample:
# Unreal Engine file types. # Note the lockable flag. *.uasset filter=lfs diff=lfs merge=lfs -text lockable *.umap filter=lfs diff=lfs merge=lfs -text lockable # Common Raw Content file types. *.blend filter=lfs diff=lfs merge=lfs -text binary *.fbx filter=lfs diff=lfs merge=lfs -text binary *.3ds filter=lfs diff=lfs merge=lfs -text binary *.psd filter=lfs diff=lfs merge=lfs -text binary *.ai filter=lfs diff=lfs merge=lfs -text binary *.svg filter=lfs diff=lfs merge=lfs -text binary *.png filter=lfs diff=lfs merge=lfs -text binary *.xcf filter=lfs diff=lfs merge=lfs -text binary *.bmp filter=lfs diff=lfs merge=lfs -text binary *.jpg filter=lfs diff=lfs merge=lfs -text binary *.jpeg filter=lfs diff=lfs merge=lfs -text binary *.tif filter=lfs diff=lfs merge=lfs -text binary *.tiff filter=lfs diff=lfs merge=lfs -text binary *.tga filter=lfs diff=lfs merge=lfs -text binary *.targa filter=lfs diff=lfs merge=lfs -text binary *.mp3 filter=lfs diff=lfs merge=lfs -text binary *.wav filter=lfs diff=lfs merge=lfs -text binary Git LFS Commands #After staging files to your Git Repo (using the ADD command) you can review which files are going to be uploaded to the Git LFS server suing this command:
git lfs status To list files being tracked by git-lfs, run:
git lfs ls-files To list files not being tracked by git-lfs (after commit), run on git bash:
{ git ls-files \u0026amp;\u0026amp; git lfs ls-files | cut -d' ' -f3-; } | sort | uniq -u Git LFS more information #Git LFS tutorial
Git LFS File locking.
Listing files not tracked by Git LFS
FAQ #Warning message: This diff contains a change in line endings from \u0026lsquo;LF\u0026rsquo; to \u0026lsquo;CRLF\u0026rsquo;. Run this command on your repo:
git config core.autocrlf input `}),e.add({id:5,href:"/wiki/docs/unreal/ue-content-creation/",title:"UE Content creation",description:"Unreal Engine content creation guidelines.",content:`Static Meshes #Naming: #Create meshes using CamelCase. Export the whole object as SM_CamelCaseName. Name textures T_CamelCaseName_SUFFIX, replacing SUFFIX with: _D: Diffuse/Color Map _N: Normal Map _E: Emissive Map _M: Mask Map _R: Roughness Map _MT: Metallic Map _S: Specular _DP: Displacement _AO: Ambient Occlusion _H: Height Map _F: Flow Map More info: Naming Convention Complete list: Here Collisions: #Add a custom convex mesh with the name UCX_MeshName, where MeshName is the exact name of the mesh that will have a collision. More info and advanced scenarios: Static Meshes Pipeline Importing: #Check Import Normals and Tangents for a properly display of Smooth Shaded Objects. UE4 will automatically show a warning when this setting is required but wasn\u0026rsquo;t selected or when the FBX was generated without the Tangent Space.
Textures #Converting between formats (Any OS) #Use ImageMagick.
# For Fedora Linux sudo dnf install ImageMagick Downloads for any other OS here
Convert all files in a folder to PNG:
mogrify -format png *.* Alternative converting TGA to PNG (Windows) #Use this CLI tool: tga2png Open the TGA file, if it looks completely transparent, add a 1 as a final parameter otherwise do not use it. Example: targa2png.exe transparent.tga transparent.png 1 targa2png.exe normal.tga normal.png Use Picsor to compress the file(s). `}),e.add({id:6,href:"/wiki/docs/linux/",title:"Linux",description:"Linux",content:""}),e.add({id:7,href:"/wiki/docs/unreal/ue-programming/",title:"UE Programming",description:"Unreal Engine programming C++ and Blueprints.",content:`Source control #Working with big assets can be challenging, here are some options:
Git Plugin. GitHub LFS is not free. PlasticSCM. Includes free plan. Helix Perforce. Build max parallel actions #Modify or create:
Linux: \$HOME/.config/Unreal Engine/UnrealBuildTool/BuildConfiguration.xml Windows: mydocuments\\Unreal Engine\\UnrealBuildTool\\BuildConfiguration.xml BuildConfiguration.xml contents:
\u0026lt;?xml version=\u0026quot;1.0\u0026quot; encoding=\u0026quot;utf-8\u0026quot; ?\u0026gt; \u0026lt;Configuration xmlns=\u0026quot;https://www.unrealengine.com/BuildConfiguration\u0026quot;\u0026gt; \u0026lt;ParallelExecutor\u0026gt; \u0026lt;MaxProcessorCount\u0026gt;30\u0026lt;/MaxProcessorCount\u0026gt; \u0026lt;ProcessorCountMultiplier\u0026gt;2\u0026lt;/ProcessorCountMultiplier\u0026gt; \u0026lt;!-- Free memory per action in bytes, used to limit the number of parallel actions if the machine is memory starved. Set to 0 to disable free memory checking. PROCEED WITH CAUTION --\u0026gt; \u0026lt;MemoryPerActionBytes\u0026gt;0\u0026lt;/MemoryPerActionBytes\u0026gt; \u0026lt;/ParallelExecutor\u0026gt; \u0026lt;/Configuration\u0026gt; In the previous example, by setting ProcessorCountMultiplier to 2, the build process takes into account logical threads (if your CPU supports Simultaneous Multi Threading (SMT) or hyper-threading) to calculate the max actions to execute in parallel. Then, setting MaxProcessorCount to 30 limits the compile thread count to 30. So if your CPU has 16 physical cores and 2 logical cores each (32 in total), this leaves 2 logical cores entirely free for other software, resulting in a smoother experience when multitasking during project compilation. This can change depending on your available RAM if you do not set MemoryPerActionBytes to 0, but doing that can eventually crash your system.
If your settings have been configured properly, you will get the following UE build process output:
Building XXX actions with 30 processes... More info:
Source Oficial link see ParallelExecutor section. Unreal Plugins #Sample project Crash course UE Audio #Reverb #To activate the reverb (on Linux or Windows), add the following line to your project /Config/DefaultEngine.ini:
[Audio] UseAudioMixer=true Create a Sound \u0026gt; Sound Attenuation asset and configure it on your Cue as the attenuation preset. Add an Audio Volume to your level, set it big enough to cover your playable area and set the following properties:
Settings -\u0026gt; Apply Reverb: True. Settings -\u0026gt; Reverb effect: select one from the dropdown. Important! Do NOT forget to add an Attenuation configuration to your Cue otherwise reverb will not work.
For more info check this video Reverb Tutorial. Note that if you added the configuration to your project .ini, you won\u0026rsquo;t need to execute additional commands on the UE console. UE Animation #Documentation: Animation
Basics Course UE Livestream Animation Blueprints Locomotion Blendspaces Anim montages Caching poses Layering Modifying bones Look at Other contents: Subanim Anim offset Physical anims Paragon How to\u0026rsquo;s UE AI #Official docs
To enable the debugger set a key binding in Project Settings \u0026gt; Engine - Gameplay Debbuger \u0026gt; Activation Key. If you\u0026rsquo;re using a non default US keyboard or a keyboard with international bindings, it is recommended to set a plain key as Asterisk (*) or Minus (-), instead of something like an Apostrophe (\u0026rsquo;) that won\u0026rsquo;t be triggered by a single key-press on a US-International setup. Navmeshes #RecastNavMesh: update some navmesh settings on the scene. Also update-able from the project settings window searching for the option Agent (you can add support for multiple types of agents from here).
Navmesh modifier volume: Adds additional information to the navmesh. Exmample: high cost areas, not allowed areas, etc.
To disable Auto-updates: Editor Preferences -\u0026gt; Level Editor -\u0026gt; Misc -\u0026gt; Update Navigation Automatically.
More info: Official docs
AI Perception #Official docs
Add component AIPerception.
UE AI Perception with C++
Behavior trees #Official docs
Quick Start Guide
Nodes: Official reference
Composite Nodes: These are the nodes that define the root of a branch and the base rules for how that branch is executed. Task Nodes: These are the leaves of the Behavior Tree, these nodes are the actionable things to do and don\u0026rsquo;t have an output connection. Decorator Nodes: Also known as conditionals. These attach to another node and make decisions on whether or not a branch in the tree, or even a single node, can be executed. Service Nodes: These attach to Composite nodes, and will execute at their defined frequency as long as their branch is being executed. These are often used to make checks and to update the Blackboard. These take the place of traditional Parallel nodes in other Behavior Tree systems. Environment Query System (EQS) #Official Docs
UE AI movement C++ #See this tutorial: https://www.vikram.codes/blog/ai/01-basic-navigation Improved and updated code to seek for a Random Reachable Location in the Navmesh:
MovementAIController.h MovementAIController.cpp Don\u0026rsquo;t forget to add the NavigationSystem and AIModule modules in your {project}.Build.cs. More info: it would be suffice to add \u0026ldquo;NavigationSystem\u0026rdquo; and \u0026ldquo;AIModule\u0026rdquo; strings to the PublicDependencyModuleNames.AddRange(\u0026hellip;) parameters. How to do it? #Convert Mouse Location to World Space: Interact with 3D objects using players\u0026rsquo; mouse. See video Reducing Packaged Game Size: See here More about Unreal C++: See UE C++ section `}),e.add({id:8,href:"/wiki/docs/unreal/",title:"Unreal",description:"Unreal",content:""}),e.add({id:9,href:"/wiki/docs/unreal/ue-cpp/",title:"UE C++",description:"Unreal Engine programming C++",content:`General information #Crash course: Converting Blueprints to C++. Documentation: Gameplay Architecture.
UPROPERTY UFUNCTION BLUEPRINT PURE / CALLABLE BLUEPRINT IMPLEMENTABLE EVENT BLUEPRINT NATIVE EVENT DELEGATES Common includes #Class #include UWorld Engine/World.h AActor GameFramework/Actor.h UActorComponent Components/ActorComponent.h USceneComponent Components/SceneComponent.h UGameplayStatics Engine/World.h UKismetSystemLibrary Kismet/GameplayStatics.h UKismetMathLibrary* Kismet/KismetMathLibrary.h FMath Math/UnrealMathUtility.h UPhysicsHandleComponent PhysicsEngine/PhysicsHandleComponent.h (*) KismetMath is usually a wrapper to FMath. Mapping types #Blueprint C++ String FString Name FName Vector FVector Rotator FRotator Transform FTransform Object UObject* Actor AActor* ActorComponent UActorComponent* Float float - double Integer int32 - uint32 Integer64 int64 - uint64 Bool bool Properties Visibility #Blueprint: BlueprintReadonly BlueprintReadWrite Defaults and instance: VisibleAnywhere EditAnywhere Only defaults: VisibleDefaultsOnly EditDefaultsOnly Only instance: VisibleInstanceOnly EditInstanceOnly Tips #You can create C++ files either manually or using the UE editor, first case requires to regenerate project files (left click on .uproject Generate Visual Studio Project Files).
After syncing files with Git, it\u0026rsquo;s a good idea to regenerate project files.
If Hot reloading doesn\u0026rsquo;t seem to take your changes, close editor and Rebuild project.
How to found BP nodes? Put your mouse over the node, see target and try to lookup for the file and lastly search for some keyword on the function name. For example:
Useful tools #Recommended IDE: Rider for UE. Recommended Git App: Github Desktop. PlasticSCM. Examples #Struct template #Sample UE C++ Struct (note F prefix):
// MyStruct.h #pragma once #include \u0026quot;MyStruct.generated.h\u0026quot; USTRUCT(BlueprintType) struct FMyStruct { GENERATED_BODY() UPROPERTY(BlueprintReadOnly) AActor* Character; FMyStruct(); }; // MyStruct.cpp FMyStruct::FMyStruct() { Character = nullptr; } Enum template #Sample UE C++ enum.
#pragma once #include \u0026quot;Enums.generated.h\u0026quot; UENUM(BlueprintType) enum class EDirection : uint8 { Left UMETA(DisplayName = \u0026quot;Left\u0026quot;), Right UMETA(DisplayName = \u0026quot;Right\u0026quot;), Front UMETA(DisplayName = \u0026quot;Front\u0026quot;), Back UMETA(DisplayName = \u0026quot;Back\u0026quot;) }; // You can add more enums here... Interfaces #Sample interface:
#pragma once #include \u0026quot;CoreMinimal.h\u0026quot; #include \u0026quot;UObject/Interface.h\u0026quot; #include \u0026quot;MyInterface.generated.h\u0026quot; // This class does not need to be modified. UINTERFACE() class UMyInterface : public UInterface { GENERATED_BODY() }; // Your interface class YOURPROJECT_API IMyInterface { GENERATED_BODY() public: UFUNCTION(BlueprintNativeEvent) void YourMethod(); }; To use it:
// Class that implements the interface UCLASS() class YOURPROJECT_API AMyCharacter : public AActor, public IMyInterface { GENERATED_BODY() public: virtual void YourMethod_Implementation() override; } // To use the interface from another function if (AnActor-\u0026gt;Implements\u0026lt;UMyInterface\u0026gt;()) { IOHActionEntity::Execute_YourMethod(AnActor); } More info here.
Delegate samples #// Declaration DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FCompletedQuestSignature, int32, index) UPROPERTY(BlueprintAssignable, BlueprintCallable) FCompletedQuestSignature CompletedQuest; // Broadcast CompletedQuest.Broadcast(parameter); // Subscribe UFUNCTION() // Required for dynamic void FunctionHandler(int32 index) CompletedQuest.AddDynamic(this, \u0026amp;Class::FunctionHandler); CompletedQuest.Add // For non dynamic version NOTE: Dynamic delegates can be serialized, their functions can be found by name, and they are slower than regular delegates. More info
Vector samples #Forward unit vector from a given rotation.
GetComponentRotation().Vector() Calculate vector of size MaxDistance starting at actor/component location on the same rotation as the actor/component.
FVector UClass::GetMaxGrabLocation() const { // GetComponentLocation or GetLocation depending if you're on an Actor or Component // same with Rotation return GetComponentLocation() + GetComponentRotation().Vector() * MaxDistance; } Linetracing samples #Complete custom sample:
// Single by channel FHitResult HitResult; if (GetWorld()-\u0026gt;LineTraceSingleByChannel(HitResult, Start, End, ECC_Visibility)) { // Handle hit! } // Linetrace for ECC_PhysicsBody or ECC_WorldDynamic FHitResult OutHit; if(GetWorld()-\u0026gt;LineTraceSingleByObjectType( OutHit, Start, End, FCollisionObjectQueryParams(ECC_TO_BITFIELD(ECollisionChannel::ECC_PhysicsBody) | ECC_TO_BITFIELD(ECollisionChannel::ECC_WorldDynamic)))) { // Handle hit! } Using Kismet (you can open its implementation to see more samples):
// LineTraceSingle or LineTraceMulti if (UKismetSystemLibrary::LineTraceSingle( WorldContextObject, StartLocation, EndLocation, UEngineTypes::ConvertToTraceType(ECC_Visibility), false, TArray\u0026lt;AActor*\u0026gt;(), EDrawDebugTrace::ForOneFrame, OutHitResult, true)) { // Handle hit(s)! } Sweep samples #Complete custom sample:
// Params with ignore self FCollisionQueryParams TraceParams(FName(\u0026quot;SphereTrace\u0026quot;), false, GetOwner()); FHitResult OutHit; // Sweep for ECC_PhysicsBody or ECC_WorldDynamic (SweepSingle or SweepMulti) if (GetWorld()-\u0026gt;SweepSingleByObjectType( OutHit, GetComponentLocation(), GetMaxGrabLocation(), FQuat::Identity, FCollisionObjectQueryParams(ECC_TO_BITFIELD(ECollisionChannel::ECC_PhysicsBody) | ECC_TO_BITFIELD(ECollisionChannel::ECC_WorldDynamic)), FCollisionShape::MakeSphere(GrabRadius), TraceParams)) { // Handle hit! } Using Kismet (you can open its implementation to see more samples):
// SphereTraceSingle or SphereTraceMulti if (UKismetSystemLibrary::SphereTraceMulti(this, CameraComponent-\u0026gt;GetComponentLocation(), GetActorLocation(), Radius, UEngineTypes::ConvertToTraceType(ECC_Visibility), false, TArray\u0026lt;AActor*\u0026gt;(), EDrawDebugTrace::ForOneFrame, OutHits, true) { // Handle hit(s)! } Anim notifiers C++ #UCLASS() class YOURPROJECT_API UAnimNotify_Name : public UAnimNotify { GENERATED_BODY() protected: virtual void Notify(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation) override; }; void UAnimNotify_Name::Notify(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation) { Super::Notify(MeshComp, Animation); // YOUR CODE GOES HERE } More info.
Anim instance C++ #UE Animation system: UCLASS() class YOURPROJECT_API UCharacterAnimInstance : public UAnimInstance { GENERATED_BODY() public: UCharacterAnimInstance(); UPROPERTY(EditDefaultsOnly) float MinWalkSpeed; } Pixel2d: UCLASS() class YOURPROJECT_API UCharacterAnimInstance : public UPixel2DAnimInstance { GENERATED_BODY() public: UCharacterAnimInstance(); UPROPERTY(EditDefaultsOnly) float MinWalkSpeed; } BoxCollider #// .h class CLASS_API AMyClass : public AActor { .... private: UPROPERTY(BlueprintReadOnly, meta = (AllowPrivateAccess = \u0026quot;true\u0026quot;)) UBoxComponent* BoxCollider; protected: virtual void BeginPlay() override; public: UFUNCTION() void BeginOverlapBoxCollider(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult \u0026amp; SweepResult); UFUNCTION() void EndOverlapBoxCollider(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex); ... } // .cpp AMyClass::AMyClass() { BoxCollider= CreateDefaultSubobject\u0026lt;UBoxComponent\u0026gt;(TEXT(\u0026quot;BoxCollider\u0026quot;)); BoxCollider-\u0026gt;SetCollisionProfileName(TEXT(\u0026quot;Custom\u0026quot;)); // TODO: Set channel (if nedeed): BoxCollision-\u0026gt;SetCollisionObjectType(ECC_Visibility); // TODO: Set size: BoxCollider-\u0026gt;SetBoxExtent(FVector(10, 10, 10)); BoxCollider-\u0026gt;SetRelativeTransform(FTransform(FRotator::ZeroRotator, FVector(0, 0, 10), FVector(1, 1, 1))); // TODO: Customize collision config BoxCollider-\u0026gt;SetCollisionResponseToAllChannels(ECR_Ignore); BoxCollider-\u0026gt;SetCollisionEnabled(ECollisionEnabled::NoCollision); BoxCollider-\u0026gt;SetCollisionResponseToChannel(ECC_Pawn, ECR_Overlap); BoxCollider-\u0026gt;SetCollisionResponseToChannel(ECC_Visibility, ECR_Overlap); BoxCollider-\u0026gt;SetGenerateOverlapEvents(true); BoxCollider-\u0026gt;SetupAttachment(RootComponent); } void AMyClass::BeginPlay() { Super::BeginPlay(); BoxCollider-\u0026gt;OnComponentBeginOverlap.AddDynamic(this, \u0026amp;AMyClass::BeginOverlapBoxCollider); BoxCollider-\u0026gt;OnComponentEndOverlap.AddDynamic(this, \u0026amp;AMyClass::EndOverlapBoxCollider); } void AMyClass::BeginOverlapBoxCollider(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult\u0026amp; SweepResult) { // YOUR CODE GOES HERE } void AMyClass::EndOverlapBoxCollider(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex) { // YOUR CODE GOES HERE } Billboards (editor icons) #// .h class CLASS_API AMyClass : public AActor { .... private: #if WITH_EDITORONLY_DATA // Editor Billboard UPROPERTY() UBillboardComponent* BillboardComponent; #endif .... // .cpp AMyClass::AMyClass() { USceneComponent* SceneComponent = CreateDefaultSubobject\u0026lt;USceneComponent\u0026gt;(TEXT(\u0026quot;SceneComp\u0026quot;)); RootComponent = SceneComponent; RootComponent-\u0026gt;Mobility = EComponentMobility::Static; // Or movable #if WITH_EDITORONLY_DATA BillboardComponent = CreateEditorOnlyDefaultSubobject\u0026lt;UBillboardComponent\u0026gt;(TEXT(\u0026quot;Sprite\u0026quot;)); if (BillboardComponent) { BillboardComponent-\u0026gt;SetWorldTransform( FTransform(FRotator::ZeroRotator, FVector::ZeroVector, FVector::OneVector * 4) ); BillboardComponent-\u0026gt;Sprite = ConstructorHelpers::FObjectFinderOptional\u0026lt;UTexture2D\u0026gt;(TEXT(\u0026quot;/PATH/TO-TEXTURE\u0026quot;)).Get(); BillboardComponent-\u0026gt;SetupAttachment(RootComponent); } #endif } `}),e.add({id:10,href:"/wiki/docs/misc/",title:"Misc",description:"Misc",content:""}),e.add({id:11,href:"/wiki/docs/start/introduction/",title:"Introduction",description:"Welcome to our free and open-source Wiki. Here we share information regarding our workflows to create videogames and programming in general.",content:`Principles #Free and open-source.
Multiplatform workflows but Linux centric.
`}),e.add({id:12,href:"/wiki/docs/linux/fixes/",title:"Linux Fixes",description:"Fixes for common errors.",content:`DNF Errors #DNF Update: invalid certificate #If dnf update gives you an error like this one:
RPM: 1. Certificiate CC5F15147A36124D invalid: certificate is not alive RPM: because: The primary key is not live RPM: because: Expired on 2022-05-15T11:33:53Z RPM: 2. Key CC5F15147A36124D invalid: key is not alive RPM: because: The primary key is not live RPM: because: Expired on 2022-05-15T11:33:53Z RPM: error: Verifying a signature using certificate E9B542ED839913B776AF2AA8CC5F15147A36124D (stable OBS Project \u0026lt;stable@obs-api-v2.codicefactory. com\u0026gt;). Find key for the repo that is not working (stable OBS Project in this case): # Command rpm -q gpg-pubkey --queryformat “%{NAME}-%{VERSION}-%{SUMMARY}\\n” # Example result “gpg-pubk... public keyn”“gpg-pubkey-7a36124d-stable OBS Project \u0026lt;stable@obs-api-v2.codicefactory.com\u0026gt;”% .... |--THIS-IS-THE-KEY--| Delete the key and the repo: # Replace with your repository key sudo rpm -e gpg-pubkey-7a36124d # Delete the repo (go to /etc/yum.repos.d/) sudo rm /etc/yum.repos.d/plasticscm-stable.repo Clean dnf cache: sudo dnf clean all Reinstall the repo and update as usual. `}),e.add({id:13,href:"/wiki/docs/linux/desktop/",title:"Desktop Configuration",description:"Configure your Linux desktop environment.",content:`💡 We have some scripts to automate the configuration of your Linux environment. Automated scripts #Fedora environment configuration: run this script prepare your development+gaming environment. Following guidelines may apply to any distribution. Tested with Fedora. General #Sudo errors #If you\u0026rsquo;re getting errors when trying to use sudo, you should add your user to sudoers. Open terminal, run these commands and restart your machine:
su - usermod -aG sudo username Common configuration #Fedora #Dolphin video previews:
sudo dnf install ffmpegthumbs Optimize startup by masking systemd-udev-settle:
sudo systemctl mask systemd-udev-settle More info
Optimize startup by disabling NetworkManager-wait-online.service:
sudo systemctl disable NetworkManager-wait-online.service More info
Disable check for updates at startup (KDE):
sudo mkdir /etc/xdg/autostart.disabled sudo mv /etc/xdg/autostart/org.kde.discover.notifier.desktop /etc/xdg/autostart.disabled/org.kde.discover.notifier.desktop In case that you\u0026rsquo;ve wanted to go back, just restore the files from the backup directory autostart.disabled. You may need to re-apply this commands after some system updates.
Software #Git #Install instructions Terminal #Install zsh Run command: zsh Install and run Powerlevel10k Set it as your default shell: usermod --shell /usr/bin/zsh root usermod --shell /usr/bin/zsh YOUR_USERNAME To re-run the setup:
p9k_configure VS Code (VSCodium) #Install VSCodium
Set VSCode/Codium as default editor. more info
xdg-mime default codium.desktop text/plain # If you're using code instead of codium xdg-mime default code.desktop text/plain GitHub Desktop #Repository.
Install with dnf on Fedora. Install with apt or download .deb on Debian / Ubuntu (on KDE right click run with Discover) Use app-image on arch. If you\u0026rsquo;re working with Windows users:
git config --global core.autocrlf input NodeJS and NPM #Install NVM.
nvm install 14 nvm use 14 (OPTIONAL STEP) Docker #Installation Fedora Installation Debian Installation Arch Add your user to docker group and restart:
su - usermod -aG docker username Rider #Install with tool-box:
Download Installation Guide If your project has NPM tasks with msbuild (if NPM INSTALL fails during compilation), run Rider using a terminal with NPM access. For example: left click on Rider search for Application \u0026gt; Command run. Copy and run it:
/home/equilaterus/.local/share/JetBrains/Toolbox/apps/Rider/ch-0/213.6775.4/bin/rider.sh To avoid repeating the previous step, create a file rider.sh at /home with the following content:
#!/bin/bash echo 'Running Rider...' # Copy your Rider command.... sh /home/equilaterus/.local/share/JetBrains/Toolbox/apps/Rider/ch-0/213.6775.4/bin/rider.sh Next time, open a console and type:
sh rider.sh Dotnet core #Installation Fedora Installation Debian Instalation Arch Snaps can have problems when running web-apps. If you have multiple versions of dotnet core, create a file global.json in the same location as this readme with the following contents:
{ \u0026quot;sdk\u0026quot;: { \u0026quot;version\u0026quot;: \u0026quot;3.1.417\u0026quot; } } Replace the version with a 3.1.x installed on your machine. To see your SDKs:
dotnet --list-sdks If you have trouble with dotnet ef after installing it, use the following command:
export PATH=\u0026quot;\$PATH:\$HOME/.dotnet/tools/\u0026quot; To fix certificates error run:
dotnet dev-certs https You\u0026rsquo;ll still have to configure trust certificates or access your page as unsecure resource from your web browser. As it is a dev env, you can safely access it as an unsafe site.
IMPORTANT!: Before upgrading your system disable source package repo: packages-microsoft-com-prod (ADDED WHEN INSTALLING POWERSHELL), otherwise you may need to uninstall all dotnet (sudo dnf remove \u0026lsquo;dotnet\u0026rsquo;*) and reinstall it again (after removing the repo). To remove it you can go to Discover \u0026gt; Settings and disable the repo.
Error \u0026ldquo;The configured user limit (128) on the number of inotify instances has been reached.\u0026rdquo;, increase the instances with the following command:
echo fs.inotify.max_user_instances=524288 | sudo tee -a /etc/sysctl.conf \u0026amp;\u0026amp; sudo sysctl -p Powershell #Installation #You can install it as a dotnet tool (after installing dotnet):
dotnet tool install --global PowerShell Other methods of installation are not recommended as MSFT repo can cause issues with your dotnet installation.
Usage #After that use pwsh to start powershell.
For dotnet core 3.1:
dotnet tool install --global PowerShell --version 7.0.9 For other versions check: nuget package
SQL Server with Docker #Guide
Summary:
# Download SQL Server image sudo docker pull mcr.microsoft.com/mssql/server:2019-latest # Create and run sql1 container sudo docker run -e \u0026quot;ACCEPT_EULA=Y\u0026quot; -e \u0026quot;SA_PASSWORD=testdb123*\u0026quot; \\ -p 1433:1433 --name sql1 --hostname sql1 \\ -d mcr.microsoft.com/mssql/server:2019-latest # Start container docker start /sql1 # Delete container with DB docker rm /sql1 -f Connection string:
string _connString = \u0026quot;Server=localhost,1433;Database=Master;User Id=SA;Password=testdb123*\u0026quot;; Temperature and other sensors #Run the following steps and execute xsensors:
sudo dnf install lm_sensors sudo sensors-detect # Configure sensors # Install GUI app sudo dnf install xsensors Scanner #Install simple-scan and sane-backends. For example, of Fedora:
sudo dnf install simple-scan sane-backends Flatpacks #Enable flatpaks: Setup instructions
# Fedora flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo Other software #Bottles:
# Fedora sudo dnf install bottles # You may need to install this to fix a dependency issue: sudo dnf install gtksourceview5 # Using flatpack flatpak install flathub com.usebottles.bottles Lutris:
# Fedora sudo dnf install lutris # Lutris flatpak install flathub net.lutris.Lutris Dropbox:
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo flatpak install flathub com.dropbox.Client Steam:
# Fedora sudo dnf install https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-\$(rpm -E %fedora).noarch.rpm sudo dnf install steam # Flatpak flatpak install flathub com.valvesoftware.Steam Telegram:
sudo flatpak install flathub org.telegram.desktop Flatpacks permissions (Flatseal):
flatpak install flathub com.github.tchx84.Flatseal Share files with Samba #This section is a WIP. Tested only on Fedora KDE.
Installation:
sudo dnf install samba hostnamectl status # Set the hostname that you prefer sudo hostnamectl set-hostname 'YOUR-HOST-NAME' # Add a password to your user when using samba # used to auth external users to open shared resources # USERNAME is your Linux username sudo smbpasswd -a USERNAME # List users sudo pdbedit -L -v # Firewall sudo firewall-cmd --permanent --add-service={samba,samba-client} --zone=home sudo firewall-cmd --reload # Verify Samba is included in your active firewall: sudo firewall-cmd --list-services #Enable and start smb and nmb services: sudo systemctl enable smb.service sudo systemctl start smb.service #Verify smb service: sudo systemctl status smb.service # IF YOU CANT ACCESS YOUR SMB RESOURCES # Open SELinux to see warnings, common fixes: # If you want samba to export all ReadOnly setsebool -P samba_export_all_ro 1 # If you want samba to enable home dirs setsebool -P samba_enable_home_dirs 1 # If you want samba to export all ReadWrite setsebool -P samba_export_all_rw 1 Sample configuration:
[global] workgroup = workgroup usershare allow guests = No usershare owner only = No guest ok = No [memes] comment = memes path = /path/to/memes read only = Yes public = Yes browseable = Yes Dont forget to start the service: sudo systemctl start smb.service
Problems #If you have problems with some paths, add this under global section:
force user = USERNAME More info: Forum
Configure Usershares #OPTIONAL - To use Dolphin to share elements directly. Not working sometimes:
sudo dnf install kdenetwork-filesharing mkdir /var/lib/samba/usershares groupadd -r sambashare chown root:sambashare /var/lib/samba/usershares chmod 1770 /var/lib/samba/usershares Set the following parameters in the /etc/samba/smb.conf configuration file:
/etc/samba/smb.conf [global] usershare path = /var/lib/samba/usershares usershare max shares = 100 usershare allow guests = yes usershare owner only = yes Add the user to the sambashare group. Replace USERNAME with the name of your linux user:
gpasswd sambashare -a USERNAME # Reload samba config! smbcontrol all reload-config Now, you can go to Dolphin (KDE file explorer) and left click on a folder \u0026gt; Properties \u0026gt; Share and configure the settings to share your folder on the network.
If you want to share paths inside your home directory you must make it accessible for the group others (Everyone).
Links:
File sharing with samba Samba configuration (See advanced configuration) `}),e.add({id:14,href:"/wiki/docs/misc/plasticscm/",title:"PlasticSCM",description:"PlasticSCM extensions and solutions.",content:`Download Plastic #Official downloads.
PlasticSCM Github Extension #We have created an extension to access your Github Issues, directly from PlasticSCM:
Available for Linux and Windows. Open source. PlasticSCM common errors #Connection refused during check-in (Linux): execute the following commands
sudo systemctl stop plasticscm-server sudo systemctl start plasticscm-server Plastic custom file types (filetypes.conf) #Plastic SCM handles two different file types: binaries and text files. By default, Plastic tries to identify a newly added file by using an internal algorithm and a built-in list of known extensions. But sometimes a file that should be binary is identified as text or viceversa. Source.
Create a file named filetypes.conf under the root folder of your workspace, and customize the contents based on the following snippet:
# PlasticSCM custom file types. # Syntax: \u0026lt;extension\u0026gt;:\u0026lt;type\u0026gt; # Type can be 'txt' or 'bin'. # Examples: # .cpp:txt # .jpg:bin .uplugin:txt .uproject:txt PlasticSCM filetypes.conf example.
`}),e.add({id:15,href:"/wiki/docs/",title:"Docs",description:"Docs Doks.",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()